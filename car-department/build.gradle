plugins {
    id 'java'
}

group = 'com.griddynamics'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

ext {
    springBootVersion = "2.5.6"
    junitJupiterVersion = "5.7.2"
    swaggerVersion = "1.6.3"
    springDocVersion = "1.5.12"
    javaxVersion = "2.2"
    lombokVersion = "1.18.20"
    postgresqlVersion = "42.3.1"
    h2databaseVersion = "1.3.148"
    liquibaseVersion = "4.6.2"
    hibernateVersion = "5.6.3.Final"
    mapstructVersion = "1.4.2.Final"
    mockitoVersion = "4.2.0"
}

dependencies {
    implementation (
            "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
            "org.springdoc:springdoc-openapi-ui:$springDocVersion",
            "io.swagger:swagger-annotations:$swaggerVersion",
            "com.h2database:h2:$h2databaseVersion",
            "org.postgresql:postgresql:$postgresqlVersion",
            "org.hibernate:hibernate-core:$hibernateVersion",
    )
    compileOnly (
            "javax.persistence:javax.persistence-api:$javaxVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.mapstruct:mapstruct:$mapstructVersion"
    )
    runtimeOnly(
            "org.liquibase:liquibase-core:$liquibaseVersion"
    )
    annotationProcessor (
            "org.projectlombok:lombok:$lombokVersion",
            "org.mapstruct:mapstruct-processor:$mapstructVersion"
    )
    testImplementation (
            "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion",
            "org.mockito:mockito-core:$mockitoVersion",
            "org.mockito:mockito-inline:$mockitoVersion"
    )
    testRuntimeOnly (
            "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    )
}

test {
    useJUnitPlatform()
}
